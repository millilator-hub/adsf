if ultimate.cfg.vars["Spectator list"] then
            surface.SetFont("HudHintTextLarge")
            
            local pLocalPlayer = LocalPlayer()
            local spectators = {}
            
            -- Собираем информацию о спектаторах
            for i = 1, #plys do
                local v = ultimate.playerCache[plys[i]]
                if not v then continue end
                if v.ObserverMode == 0 then continue end 
                if not IsValid(v.entity) then continue end  
                if not IsValid(v.ObserverTarget) then continue end 
                
                local spectatorName = v.entity:Name() or "Unknown" 
                local targetName = v.ObserverTarget:Name() or "Unknown"
                local text = spectatorName .. " spectating " .. targetName
                
                table.insert(spectators, {
                    text = text,
                    textColor = (v.ObserverTarget == pLocalPlayer) and Color(255, 0, 0) or Color(255, 255, 255)
                })
            end
            
            -- Размеры и позиция панели
            local panelWidth = 350
            local panelHeight = 40 + (#spectators * 15)
            local panelX = ScrW() - panelWidth - 20
            local panelY = ScrH() / 2 - panelHeight / 2
            
            -- Основной прямоугольник (без углов)
            draw.RoundedBox(0, panelX, panelY, panelWidth, panelHeight, Color(59, 59, 59, 180))
            
            -- Темная рамка (обводка)
            surface.SetDrawColor(80, 0, 20, 255)
            surface.DrawOutlinedRect(panelX, panelY, panelWidth, panelHeight)
            
            -- Добавляем красную обводку поверх рамки
            surface.SetDrawColor(255, 0, 0) -- красный цвет
            surface.DrawOutlinedRect(panelX, panelY, panelWidth, panelHeight)
            
            -- Заголовок
            surface.SetTextColor(255, 255, 255)
            surface.SetFont("HudHintTextLarge")
            surface.SetTextPos(panelX + 10, panelY + 10)
            surface.DrawText("                         SPECTATORS")
            
            -- Получаем высоту шрифта для правильного позиционирования линии
            local _, fontHeight = surface.GetTextSize("A")
            
            -- Рисуем красную линию под заголовком
            local headerLineY = panelY + 10 + fontHeight + 2
            surface.SetDrawColor(255, 0, 0) -- красный цвет для линии
            surface.DrawLine(panelX + 10, headerLineY, panelX + panelWidth - 10, headerLineY)
            
            -- Рисуем список спектаторов внутри прямоугольника
            local textY = panelY + 35
            
            for _, spec in ipairs(spectators) do
                surface.SetTextPos(panelX + 20, textY)
                surface.SetTextColor(spec.textColor)
                surface.DrawText(spec.text)
                textY = textY + 15
            end
        end
    end
